{"remainingRequest":"E:\\uni_app\\ppmovie\\node_modules\\babel-loader\\lib\\index.js!E:\\uni_app\\ppmovie\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\uni_app\\ppmovie\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\uni_app\\ppmovie\\src\\views\\video.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\uni_app\\ppmovie\\src\\views\\video.vue","mtime":1662276233974},{"path":"E:\\uni_app\\ppmovie\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1661925503151},{"path":"E:\\uni_app\\ppmovie\\node_modules\\babel-loader\\lib\\index.js","mtime":1661925517134},{"path":"E:\\uni_app\\ppmovie\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1661925503151},{"path":"E:\\uni_app\\ppmovie\\node_modules\\vue-loader\\lib\\index.js","mtime":1661925514444}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nrequire('video.js/dist/video-js.css');\n\nimport axios from \"axios\";\nimport videojs from \"video.js\";\nimport \"videojs-contrib-hls\";\nexport default {\n  beforeCreate: function beforeCreate() {// console.log(this.$route.query.vod_id)\n  },\n  mounted: function mounted() {\n    // var vod_id = this.$route.query.vod_id\n    console.log('子组件' + this.url_v);\n    this.getVideo();\n  },\n  name: 'Player',\n  props: {\n    url: String\n  },\n  methods: {\n    getVideo: function getVideo() {\n      var that = this;\n      this.player = videojs(\"my-video\", {\n        hls: true,\n        aspectRatio: '16:9',\n        // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\n        fluid: true,\n        preload: 'auto',\n        bigPlayButton: true,\n        textTrackDisplay: false,\n        posterImage: true,\n        errorDisplay: false,\n        language: 'zh-CN',\n        notSupportedMessage: '此视频暂无法播放，请稍后再试',\n        controlBar: true,\n        sources: [// 视频源\n        {\n          src: that.url\n        }]\n      });\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.player != null) {\n      this.player.dispose(); // dispose()会直接删除Dom元素\n    }\n  }\n};",{"version":3,"sources":["video.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAA,CAAA,4BAAA,CAAA;;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,OAAA,MAAA,UAAA;AACA,OAAA,qBAAA;AACA,eAAA;AACA,EAAA,YADA,0BACA,CACA;AACA,GAHA;AAIA,EAAA,OAJA,qBAIA;AACA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,KAAA;AACA,SAAA,QAAA;AACA,GARA;AASA,EAAA,IAAA,EAAA,QATA;AAUA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AADA,GAVA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,WAAA,MAAA,GAAA,OAAA,CACA,UADA,EAEA;AACA,QAAA,GAAA,EAAA,IADA;AAEA,QAAA,WAAA,EAAA,MAFA;AAEA;AACA,QAAA,KAAA,EAAA,IAHA;AAIA,QAAA,OAAA,EAAA,MAJA;AAKA,QAAA,aAAA,EAAA,IALA;AAMA,QAAA,gBAAA,EAAA,KANA;AAOA,QAAA,WAAA,EAAA,IAPA;AAQA,QAAA,YAAA,EAAA,KARA;AASA,QAAA,QAAA,EAAA,OATA;AAUA,QAAA,mBAAA,EAAA,gBAVA;AAWA,QAAA,UAAA,EAAA,IAXA;AAYA,QAAA,OAAA,EAAA,CAAA;AACA;AACA,UAAA,GAAA,EAAA,IAAA,CAAA;AADA,SADA;AAZA,OAFA,CAAA;AAwBA;AA3BA,GAbA;AA0CA,EAAA,aA1CA,2BA0CA;AACA,QAAA,KAAA,MAAA,IAAA,IAAA,EAAA;AACA,WAAA,MAAA,CAAA,OAAA,GADA,CACA;AACA;AACA;AA9CA,CAAA","sourcesContent":["<template>\r\n\t<!-- <div id=\"player_container\"> -->\r\n\t\t<div id=\"player\">\r\n\t\t\t\r\n\t\t\t<video\r\n\t\t\t    id=\"my-video\" \r\n\t\t\t    controls\r\n\t\t\t\tclass=\"video-js vjs-big-play-centered\"\r\n\t\t\t\twidth=\"790px\"\r\n\t\t\t\theight=\"460px\"\r\n\t\t\t\tposter=\"../assets/poster2.png\"\r\n\t\t\t\tautoplay: false\r\n\t\t\t\t\t>\r\n\t\t\t</video> \r\n\r\n\t\t</div>\r\n\t<!-- </div> -->\r\n\t<!-- <el-button type=\"primary\" @click=\"getVideo()\">播放</el-button> -->\r\n\t  <!-- <el-button  round @click=\"start()\">播放</el-button> -->\r\n\t<!-- class=\"video-js vjs-default-skin vjs-big-play-centered\" -->\r\n\t<!-- class=\"vjs-default-skin\" -->\r\n\t\n</template>\n\n<script>\r\n\trequire('video.js/dist/video-js.css')\r\n\timport axios from \"axios\"\r\n\timport videojs from \"video.js\";\r\n\timport \"videojs-contrib-hls\";\r\n\texport default{\r\n\t\tbeforeCreate(){\r\n\t\t\t// console.log(this.$route.query.vod_id)\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\t// var vod_id = this.$route.query.vod_id\r\n\t\t\tconsole.log('子组件'+this.url_v)\r\n\t\t\tthis.getVideo()\r\n\t\t},\r\n\t\tname:'Player',\r\n\t\tprops: {\r\n\t\t  url: String\r\n\t\t},\r\n\t\tmethods:{\r\n\t\t\tgetVideo() {\r\n\t\t\t\tvar that = this\r\n\t\t\t   this.player=videojs(\r\n\t\t\t\t   \"my-video\",\r\n\t\t\t\t   {\r\n\t\t\t\t\t   hls: true,\r\n\t\t\t\t\t   aspectRatio: '16:9', // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\r\n\t\t\t\t\t   fluid: true, \r\n\t\t\t\t\t   preload: 'auto',\r\n\t\t\t\t\t   bigPlayButton: true,\r\n\t\t\t\t\t   textTrackDisplay: false,\r\n\t\t\t\t\t   posterImage: true,\r\n\t\t\t\t\t   errorDisplay: false,\r\n\t\t\t\t\t   language: 'zh-CN',\r\n\t\t\t\t\t   notSupportedMessage: '此视频暂无法播放，请稍后再试',\r\n\t\t\t\t\t   controlBar:true,\r\n\t\t\t\t\t   sources:[ // 视频源\r\n\t\t\t\t\t         {\r\n\t\t\t\t\t             src: that.url,\r\n\t\t\t\t\t         }\r\n\t\t\t\t\t     ]\r\n\r\n\t\t\t\t   },\r\n\t\t\t\t   \r\n\t\t\t   );\r\n\t\r\n\t\t\t\t},\r\n\t\t},\r\n\t\tbeforeDestroy() {\r\n\t\t      if (this.player != null) {\r\n\t\t        this.player.dispose() // dispose()会直接删除Dom元素\r\n\t\t      }\r\n\t\t    }\r\n\r\n\t\r\n\t}\n</script>\n\n\n<style>\r\n\t#side_container{\r\n\t\tdisplay: flex;\r\n\t\tflex-direction:column;\r\n\t\twidth:calc(100% - 792px);\r\n\t\theight:auto ;\r\n\t\ttext-align: left;\r\n\t\tborder: 4px white solid;\r\n\t}\r\n\t#player{\r\n\t\twidth: 792px;\r\n\t\t\r\n\t\theight: 460px;\r\n\t\t\r\n\t}\r\n\t#player_container{\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t}\r\n</style>"],"sourceRoot":"src/views"}]}